```
{
    health = {
        value = 10,
        max = 13,
    },
    sanity = 50 + 2
}
```

[lexer]
[
    "OpenC `{`",
    "Whitespace `\n    `",
    "Identifier `health`",
    "Whitespace ` `",
    "OpAssign `=`",
    "Whitespace ` `",
    "OpenC `{`",
    "Whitespace `\n        `",
    "Identifier `value`",
    "Whitespace ` `",
    "OpAssign `=`",
    "Whitespace ` `",
    "Number `10`",
    "Comma `,`",
    "Whitespace `\n        `",
    "Identifier `max`",
    "Whitespace ` `",
    "OpAssign `=`",
    "Whitespace ` `",
    "Number `13`",
    "Comma `,`",
    "Whitespace `\n    `",
    "CloseC `}`",
    "Comma `,`",
    "Whitespace `\n    `",
    "Identifier `sanity`",
    "Whitespace ` `",
    "OpAssign `=`",
    "Whitespace ` `",
    "Number `50`",
    "Whitespace ` `",
    "OpPlus `+`",
    "Whitespace ` `",
    "Number `2`",
    "Whitespace `\n`",
    "CloseC `}`",
]

[parser]
ROOT @ 0..83 = `{\n    health = {\n        value = 10,\n        max = 13,\n    },\n    sanity = 50 + 2\n}`
    STRUCT, VALUE @ 0..83 = `{\n    health = {\n        value = 10,\n        max = 13,\n    },\n    sanity = 50 + 2\n}`
        TOKEN @ 0..1 = `{`
        TRIVIA @ 1..6 = `\n    `
        IDENTIFIER, KEY, TOKEN @ 6..12 = `health`
        TRIVIA @ 12..13 = ` `
        TOKEN @ 13..14 = `=`
        TRIVIA @ 14..15 = ` `
        STRUCT, VALUE @ 15..60 = `{\n        value = 10,\n        max = 13,\n    }`
            TOKEN @ 15..16 = `{`
            TRIVIA @ 16..25 = `\n        `
            IDENTIFIER, KEY, TOKEN @ 25..30 = `value`
            TRIVIA @ 30..31 = ` `
            TOKEN @ 31..32 = `=`
            TRIVIA @ 32..33 = ` `
            NUMBER, TOKEN, VALUE @ 33..35 = `10`
            TOKEN @ 35..36 = `,`
            TRIVIA @ 36..45 = `\n        `
            IDENTIFIER, KEY, TOKEN @ 45..48 = `max`
            TRIVIA @ 48..49 = ` `
            TOKEN @ 49..50 = `=`
            TRIVIA @ 50..51 = ` `
            NUMBER, TOKEN, VALUE @ 51..53 = `13`
            TOKEN @ 53..54 = `,`
            TRIVIA @ 54..59 = `\n    `
            TOKEN @ 59..60 = `}`
        TOKEN @ 60..61 = `,`
        TRIVIA @ 61..66 = `\n    `
        IDENTIFIER, KEY, TOKEN @ 66..72 = `sanity`
        TRIVIA @ 72..73 = ` `
        TOKEN @ 73..74 = `=`
        TRIVIA @ 74..75 = ` `
        BINARY, VALUE @ 75..81 = `50 + 2`
            NUMBER, TOKEN, VALUE @ 75..77 = `50`
            TRIVIA @ 77..78 = ` `
            OP, TOKEN @ 78..79 = `+`
            TRIVIA @ 79..80 = ` `
            NUMBER, TOKEN, VALUE @ 80..81 = `2`
            TRIVIA @ 81..82 = `\n`
        TOKEN @ 82..83 = `}`
    TOKEN @ 83..83 = ``


### No Errors ###


[eval]
`{
    health = {
        max = 13,
        value = 10,
    },
    sanity = 52,
 }`

