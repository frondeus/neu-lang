```
{
    foo = 10,
    bar = .baz
}
```

[lexer]
[
    "OpenC `{`",
    "LineEnd `\n`",
    "Whitespace `    `",
    "Identifier `foo`",
    "Whitespace ` `",
    "OpAssign `=`",
    "Whitespace ` `",
    "Number `10`",
    "Comma `,`",
    "LineEnd `\n`",
    "Whitespace `    `",
    "Identifier `bar`",
    "Whitespace ` `",
    "OpAssign `=`",
    "Whitespace ` `",
    "OpDot `.`",
    "Identifier `baz`",
    "LineEnd `\n`",
    "CloseC `}`",
]

[parser]
--- GREEN TREE ---
Root, Value, Strukt @ 0..32
    token @ 0..1 = `{`
    StruktPair @ 1..14
        Key, identifier, token @ 1..10 = `foo` ; leading: `\n    ` ; trailing: ` `
        token @ 10..12 = `=` ; trailing: ` `
        Value, number, token @ 12..14 = `10`
    token @ 14..15 = `,`
    StruktPair @ 15..30
        Key, identifier, token @ 15..24 = `bar` ; leading: `\n    ` ; trailing: ` `
        token @ 24..26 = `=` ; trailing: ` `
        Value, Unary @ 26..30
            UnaryOp, token @ 26..27 = `.`
            Value, identifier, token @ 27..30 = `baz`
    token @ 30..32 = `}` ; leading: `\n`
--- END ---


[eval]
None

[errors]
test.neu | N14 | Field not found

