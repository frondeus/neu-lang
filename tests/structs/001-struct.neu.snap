```
{
    health = 10,
    sanity = 50
}
```

[lexer]
[
    "OpenC `{`",
    "LineEnd `\n`",
    "Whitespace `    `",
    "Identifier `health`",
    "Whitespace ` `",
    "OpAssign `=`",
    "Whitespace ` `",
    "Number `10`",
    "Comma `,`",
    "LineEnd `\n`",
    "Whitespace `    `",
    "Identifier `sanity`",
    "Whitespace ` `",
    "OpAssign `=`",
    "Whitespace ` `",
    "Number `50`",
    "LineEnd `\n`",
    "CloseC `}`",
]

[parser]
--- GREEN TREE ---
Root, Value, Strukt @ 0..36
    token @ 0..1 = `{`
    StruktPair @ 1..17
        Key, identifier, token @ 1..13 = `health` ; leading: `\n    ` ; trailing: ` `
        token @ 13..15 = `=` ; trailing: ` `
        Value, number, token @ 15..17 = `10`
    token @ 17..18 = `,`
    StruktPair @ 18..34
        Key, identifier, token @ 18..30 = `sanity` ; leading: `\n    ` ; trailing: ` `
        token @ 30..32 = `=` ; trailing: ` `
        Value, number, token @ 32..34 = `50`
    token @ 34..36 = `}` ; leading: `\n`
--- END ---


[eval]
`{
    health = 10,
    sanity = 50,
 }`

