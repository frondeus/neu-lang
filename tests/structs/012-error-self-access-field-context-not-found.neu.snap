```
.bar + foo.baz
```

[lexer]
[
    "OpDot `.`",
    "Identifier `bar`",
    "Whitespace ` `",
    "OpPlus `+`",
    "Whitespace ` `",
    "Identifier `foo`",
    "OpDot `.`",
    "Identifier `baz`",
]

[parser]
--- GREEN TREE ---
Root, Value, Binary @ 0..14
    Value, Unary @ 0..5
        UnaryOp, token @ 0..1 = `.`
        Value, identifier, token @ 1..5 = `bar` ; trailing: ` `
    BinaryOp, token @ 5..7 = `+` ; trailing: ` `
    Value, IdentPath @ 7..14
        Value, identifier, token @ 7..10 = `foo`
        BinaryOp, token @ 10..11 = `.`
        Value, identifier, token @ 11..14 = `baz`
--- END ---


[eval]
None

[errors]
test.neu | N0 | Couldn't find any structure for field access

