```
4 + 2 * 5
```

[lexer]
[
    "Number `4`",
    "Trivia ` `",
    "OpPlus `+`",
    "Trivia ` `",
    "Number `2`",
    "Trivia ` `",
    "OpStar `*`",
    "Trivia ` `",
    "Number `5`",
]

[parser]
ROOT @ 0..9 = `4 + 2 * 5`
    BINARY, VALUE @ 0..9 = `4 + 2 * 5`
        NUMBER, TOKEN, VALUE @ 0..1 = `4`
        TRIVIA @ 1..2 = ` `
        OP, TOKEN @ 2..3 = `+`
        TRIVIA @ 3..4 = ` `
        BINARY, VALUE @ 4..9 = `2 * 5`
            NUMBER, TOKEN, VALUE @ 4..5 = `2`
            TRIVIA @ 5..6 = ` `
            OP, TOKEN @ 6..7 = `*`
            TRIVIA @ 7..8 = ` `
            NUMBER, TOKEN, VALUE @ 8..9 = `5`
    TOKEN @ 9..9 = ``


### No Errors ###


[eval]
`14`

