```
4 + 2
```

[lexer]
[
    "Number `4`",
    "Whitespace ` `",
    "OpPlus `+`",
    "Whitespace ` `",
    "Number `2`",
]

[parser]
ROOT @ 0..5 = `4 + 2`
    BINARY, VALUE @ 0..5 = `4 + 2`
        NUMBER, TOKEN, VALUE @ 0..1 = `4`
        TRIVIA @ 1..2 = ` `
        OP, TOKEN @ 2..3 = `+`
        TRIVIA @ 3..4 = ` `
        NUMBER, TOKEN, VALUE @ 4..5 = `2`


[eval]
`6`

